load("github.com/maxmcd/bramble/lib/seed")
load("github.com/maxmcd/bramble/lib/std")


def nix_stdenv():
    pass


def autoconf():
    autoconf = std.fetch_url("https://brmbl.s3.amazonaws.com/autoconf.tar.gz")
    return derivation(
        name="autoconf",
        builder=_build_autoconf,
        env=dict(autoconf_src=autoconf, seed=seed.seed()),
    )


def _build_autoconf(s, outputs):
    s.setenv("PATH", s.getenv("seed") + "/bin")
    os.mkdir(outputs["out"] + "/bin")
    std.exec(s, "cp -r $autoconf_src/autoconf/ $out/bin")


def test_autoconf():
    ac = autoconf()
    print(os.cmd(ac.out + "/bin/autoconf/autoconf -h").output())


def _make():
    make_src = derivation(
        name="make_src",
        builder="fetch_url",
        env={
            "url": "https://ftp.gnu.org/gnu/make/make-4.2.tar.gz",
            "hash": "e968ce3c57ad39a593a92339e23eb148af6296b9f40aa453a9a9202c99d34436",
        },
    )
    return derivation(
        name="bash",
        builder=_build_make,
        env=dict(make_srv=make_src, seed=seed.seed(), autoconf=autoconf()),
    )


def _build_make():
    os.setenv("PATH", os.getenv("seed") + "/bin" + ":" + os.getenv("autoconf") + "/bin")
    os.setenv("CC", "x86_64-linux-musl-gcc --static")
    os.setenv("CFLAGS", "-O2 -fstack-protector")
    os.setenv("LDFLAGS", "-s")

    std.exec("cp -r $make_src/make-4.2/ .")
    os.cd("./make-4.2")

    std.exec("ls -lah")
    std.exec("$seed/bin/sh", "./configure", "--prefix=$out")
    std.exec("$seed/bin/sh", "./build.sh")
    std.exec("ls -lah $out")
    std.exec("./make", "install")


def _bash():
    bash_src = derivation(
        name="bash_src",
        builder="fetch_url",
        env={
            "url": "http://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz",
            "hash": "d86b3392c1202e8ff5a423b302e6284db7f8f435ea9f39b5b1b20fd3ac36dfcb",
        },
    )
    return derivation(
        name="bash", builder=_build_bash, env=dict(bash_src=bash_src, seed=seed.seed()),
    )


def _build_bash():
    os.setenv("PATH", os.getenv("seed") + "/bin")
    std.exec("cp -r $bash_src/bash-4.4/ .")
    os.cd("./bash-4.4")
    os.setenv("LD_LIBRARY_PATH", "$seed/x86_64-linux-musl/lib")
    std.exec("env")
    guess = std.exec("$seed/bin/sh ./support/config.guess").output()
    std.exec("$seed/bin/sh", "--prefix=$out", "./configure", "--without-bash-malloc")
