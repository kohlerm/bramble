"""
Bramble cmd examples
"""


def _grep(*args, **kwargs):
    return os.cmd("grep", *args, **kwargs)


def main():
    cmd = os.cmd
    cmd("ls -lah")
    cmd("ls", "-lah")
    cmd(["ls", "-lah"])

    # you can pipe commands into other commands
    cmd("ls -lah").pipe("sort")

    # pipe can also take a callback
    # Additional arguments are passed to the callback
    cmd("ls -lah").pipe(_grep, "foo")

    # runs and gives stdout as a string
    cmd("echo").stdout()
    cmd("echo").output()
    cmd("echo").stderr()

    # cmd has various methods and attributes
    sleep = cmd("sleep 10")
    # kill the command
    sleep.kill()
    # or wait for the command to end
    cmd("echo").wait()
    # and get the exit code, if there is one
    cmd("ls ").exit_code

    # Pass stdin to another command
    cmd("grep", stdin=sleep.output)
    # passing the command will pass stdout
    cmd("grep", stdin=cmd("echo"))

    # iterate on stout or stderr to process each line
    for line in cmd("ls -lah").stdout:
        print(line)

    # fail over to other commands
    cmd("ls notathing ").if_err("echo failed")

    # the cmd() function takes various perameters
    cmd(
        "echo",
        stdin=cmd("echo"),
        dir="../",
        env={"FOO": "BAR", "X": "Y"},
        clear_env=False,
        ignore_failure=True,
        print_output=True,
    )
