// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.7.1
// source: bramble_pb.proto

package bramblepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bramble struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Derivations   map[string]*Derivation `protobuf:"bytes,1,rep,name=derivations,proto3" json:"derivations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FilenameCache map[string]string      `protobuf:"bytes,2,rep,name=filename_cache,json=filenameCache,proto3" json:"filename_cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Store         *Store                 `protobuf:"bytes,3,opt,name=store,proto3" json:"store,omitempty"`
}

func (x *Bramble) Reset() {
	*x = Bramble{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bramble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bramble) ProtoMessage() {}

func (x *Bramble) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bramble.ProtoReflect.Descriptor instead.
func (*Bramble) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{0}
}

func (x *Bramble) GetDerivations() map[string]*Derivation {
	if x != nil {
		return x.Derivations
	}
	return nil
}

func (x *Bramble) GetFilenameCache() map[string]string {
	if x != nil {
		return x.FilenameCache
	}
	return nil
}

func (x *Bramble) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BramblePath string `protobuf:"bytes,1,opt,name=bramble_path,json=bramblePath,proto3" json:"bramble_path,omitempty"`
	StorePath   string `protobuf:"bytes,2,opt,name=store_path,json=storePath,proto3" json:"store_path,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{1}
}

func (x *Store) GetBramblePath() string {
	if x != nil {
		return x.BramblePath
	}
	return ""
}

func (x *Store) GetStorePath() string {
	if x != nil {
		return x.StorePath
	}
	return ""
}

type Derivation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args                     []string            `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	BuildContextSource       string              `protobuf:"bytes,2,opt,name=build_context_source,json=buildContextSource,proto3" json:"build_context_source,omitempty"`
	BuildContextRelativePath string              `protobuf:"bytes,3,opt,name=build_context_relative_path,json=buildContextRelativePath,proto3" json:"build_context_relative_path,omitempty"`
	Builder                  string              `protobuf:"bytes,4,opt,name=builder,proto3" json:"builder,omitempty"`
	Env                      map[string]string   `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InputDerivations         []*DerivationOutput `protobuf:"bytes,6,rep,name=input_derivations,json=inputDerivations,proto3" json:"input_derivations,omitempty"`
	Name                     string              `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	OutputNames              []string            `protobuf:"bytes,8,rep,name=output_names,json=outputNames,proto3" json:"output_names,omitempty"`
	Outputs                  []*Output           `protobuf:"bytes,9,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Platform                 string              `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	SourcePaths              []string            `protobuf:"bytes,11,rep,name=source_paths,json=sourcePaths,proto3" json:"source_paths,omitempty"`
}

func (x *Derivation) Reset() {
	*x = Derivation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Derivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Derivation) ProtoMessage() {}

func (x *Derivation) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Derivation.ProtoReflect.Descriptor instead.
func (*Derivation) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{2}
}

func (x *Derivation) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Derivation) GetBuildContextSource() string {
	if x != nil {
		return x.BuildContextSource
	}
	return ""
}

func (x *Derivation) GetBuildContextRelativePath() string {
	if x != nil {
		return x.BuildContextRelativePath
	}
	return ""
}

func (x *Derivation) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *Derivation) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Derivation) GetInputDerivations() []*DerivationOutput {
	if x != nil {
		return x.InputDerivations
	}
	return nil
}

func (x *Derivation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Derivation) GetOutputNames() []string {
	if x != nil {
		return x.OutputNames
	}
	return nil
}

func (x *Derivation) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Derivation) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Derivation) GetSourcePaths() []string {
	if x != nil {
		return x.SourcePaths
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path         string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Dependencies []string `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Output) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type DerivationOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename   string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	OutputName string `protobuf:"bytes,2,opt,name=output_name,json=outputName,proto3" json:"output_name,omitempty"`
}

func (x *DerivationOutput) Reset() {
	*x = DerivationOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivationOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivationOutput) ProtoMessage() {}

func (x *DerivationOutput) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivationOutput.ProtoReflect.Descriptor instead.
func (*DerivationOutput) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{4}
}

func (x *DerivationOutput) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DerivationOutput) GetOutputName() string {
	if x != nil {
		return x.OutputName
	}
	return ""
}

type FunctionBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bramble             *Bramble             `protobuf:"bytes,1,opt,name=bramble,proto3" json:"bramble,omitempty"`
	FunctionBuilderMeta *FunctionBuilderMeta `protobuf:"bytes,2,opt,name=function_builder_meta,json=functionBuilderMeta,proto3" json:"function_builder_meta,omitempty"`
	OutputPaths         map[string]string    `protobuf:"bytes,3,rep,name=output_paths,json=outputPaths,proto3" json:"output_paths,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BuildDirectory      string               `protobuf:"bytes,4,opt,name=build_directory,json=buildDirectory,proto3" json:"build_directory,omitempty"`
	Derivation          *Derivation          `protobuf:"bytes,5,opt,name=derivation,proto3" json:"derivation,omitempty"`
}

func (x *FunctionBuild) Reset() {
	*x = FunctionBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionBuild) ProtoMessage() {}

func (x *FunctionBuild) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionBuild.ProtoReflect.Descriptor instead.
func (*FunctionBuild) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{5}
}

func (x *FunctionBuild) GetBramble() *Bramble {
	if x != nil {
		return x.Bramble
	}
	return nil
}

func (x *FunctionBuild) GetFunctionBuilderMeta() *FunctionBuilderMeta {
	if x != nil {
		return x.FunctionBuilderMeta
	}
	return nil
}

func (x *FunctionBuild) GetOutputPaths() map[string]string {
	if x != nil {
		return x.OutputPaths
	}
	return nil
}

func (x *FunctionBuild) GetBuildDirectory() string {
	if x != nil {
		return x.BuildDirectory
	}
	return ""
}

func (x *FunctionBuild) GetDerivation() *Derivation {
	if x != nil {
		return x.Derivation
	}
	return nil
}

type FunctionBuilderMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module      string            `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Function    string            `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	ModuleCache map[string]string `protobuf:"bytes,3,rep,name=module_cache,json=moduleCache,proto3" json:"module_cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FunctionBuilderMeta) Reset() {
	*x = FunctionBuilderMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bramble_pb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionBuilderMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionBuilderMeta) ProtoMessage() {}

func (x *FunctionBuilderMeta) ProtoReflect() protoreflect.Message {
	mi := &file_bramble_pb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionBuilderMeta.ProtoReflect.Descriptor instead.
func (*FunctionBuilderMeta) Descriptor() ([]byte, []int) {
	return file_bramble_pb_proto_rawDescGZIP(), []int{6}
}

func (x *FunctionBuilderMeta) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *FunctionBuilderMeta) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *FunctionBuilderMeta) GetModuleCache() map[string]string {
	if x != nil {
		return x.ModuleCache
	}
	return nil
}

var File_bramble_pb_proto protoreflect.FileDescriptor

var file_bramble_pb_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x22, 0xdf, 0x02,
	0x0a, 0x07, 0x42, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x61, 0x6d, 0x62,
	0x6c, 0x65, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x4c, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62,
	0x6c, 0x65, 0x70, 0x62, 0x2e, 0x42, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x26,
	0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x55, 0x0a, 0x10, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x72,
	0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x40, 0x0a,
	0x12, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x49, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6d,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x82, 0x04, 0x0a, 0x0a, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x30, 0x0a,
	0x14, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x1b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x48, 0x0a, 0x11, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62,
	0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x40, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x22, 0x4f, 0x0a, 0x10, 0x44, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xff, 0x02, 0x0a, 0x0d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70,
	0x62, 0x2e, 0x42, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6d, 0x62,
	0x6c, 0x65, 0x12, 0x52, 0x0a, 0x15, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x13, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62,
	0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x35, 0x0a,
	0x0a, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3e, 0x0a, 0x10, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x52, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65,
	0x70, 0x62, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x62, 0x72, 0x61, 0x6d, 0x62, 0x6c,
	0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bramble_pb_proto_rawDescOnce sync.Once
	file_bramble_pb_proto_rawDescData = file_bramble_pb_proto_rawDesc
)

func file_bramble_pb_proto_rawDescGZIP() []byte {
	file_bramble_pb_proto_rawDescOnce.Do(func() {
		file_bramble_pb_proto_rawDescData = protoimpl.X.CompressGZIP(file_bramble_pb_proto_rawDescData)
	})
	return file_bramble_pb_proto_rawDescData
}

var file_bramble_pb_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_bramble_pb_proto_goTypes = []interface{}{
	(*Bramble)(nil),             // 0: bramblepb.Bramble
	(*Store)(nil),               // 1: bramblepb.Store
	(*Derivation)(nil),          // 2: bramblepb.Derivation
	(*Output)(nil),              // 3: bramblepb.Output
	(*DerivationOutput)(nil),    // 4: bramblepb.DerivationOutput
	(*FunctionBuild)(nil),       // 5: bramblepb.FunctionBuild
	(*FunctionBuilderMeta)(nil), // 6: bramblepb.FunctionBuilderMeta
	nil,                         // 7: bramblepb.Bramble.DerivationsEntry
	nil,                         // 8: bramblepb.Bramble.FilenameCacheEntry
	nil,                         // 9: bramblepb.Derivation.EnvEntry
	nil,                         // 10: bramblepb.FunctionBuild.OutputPathsEntry
	nil,                         // 11: bramblepb.FunctionBuilderMeta.ModuleCacheEntry
}
var file_bramble_pb_proto_depIdxs = []int32{
	7,  // 0: bramblepb.Bramble.derivations:type_name -> bramblepb.Bramble.DerivationsEntry
	8,  // 1: bramblepb.Bramble.filename_cache:type_name -> bramblepb.Bramble.FilenameCacheEntry
	1,  // 2: bramblepb.Bramble.store:type_name -> bramblepb.Store
	9,  // 3: bramblepb.Derivation.env:type_name -> bramblepb.Derivation.EnvEntry
	4,  // 4: bramblepb.Derivation.input_derivations:type_name -> bramblepb.DerivationOutput
	3,  // 5: bramblepb.Derivation.outputs:type_name -> bramblepb.Output
	0,  // 6: bramblepb.FunctionBuild.bramble:type_name -> bramblepb.Bramble
	6,  // 7: bramblepb.FunctionBuild.function_builder_meta:type_name -> bramblepb.FunctionBuilderMeta
	10, // 8: bramblepb.FunctionBuild.output_paths:type_name -> bramblepb.FunctionBuild.OutputPathsEntry
	2,  // 9: bramblepb.FunctionBuild.derivation:type_name -> bramblepb.Derivation
	11, // 10: bramblepb.FunctionBuilderMeta.module_cache:type_name -> bramblepb.FunctionBuilderMeta.ModuleCacheEntry
	2,  // 11: bramblepb.Bramble.DerivationsEntry.value:type_name -> bramblepb.Derivation
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bramble_pb_proto_init() }
func file_bramble_pb_proto_init() {
	if File_bramble_pb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bramble_pb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bramble); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Derivation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivationOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bramble_pb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionBuilderMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bramble_pb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bramble_pb_proto_goTypes,
		DependencyIndexes: file_bramble_pb_proto_depIdxs,
		MessageInfos:      file_bramble_pb_proto_msgTypes,
	}.Build()
	File_bramble_pb_proto = out.File
	file_bramble_pb_proto_rawDesc = nil
	file_bramble_pb_proto_goTypes = nil
	file_bramble_pb_proto_depIdxs = nil
}
